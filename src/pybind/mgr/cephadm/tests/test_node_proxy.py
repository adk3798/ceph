from cherrypy.test import helper
from cephadm.node_proxy import NodeProxy
from unittest.mock import MagicMock, call

helper.CPWebCase.interactive = False


class FakeMgr:
    def __init__(self) -> None:
        self.set_health_warning = MagicMock()

    def get_mgr_ip(self) -> str:
        return '0.0.0.0'


class TestNodeProxy(helper.CPWebCase):
    mgr = FakeMgr()

    def setUp(self) -> None:
        self.fake_data_with_criticals = '{"storage": {"disk.bay.0:enclosure.internal.0-1:raid.integrated.1-1": {"description": "Solid State Disk 0:1:0", "entity": "RAID.Integrated.1-1", "capacity_bytes": 959656755200, "model": "KPM5XVUG960G", "protocol": "SAS", "serial_number": "8080A1CRTP5F", "status": {"health": "Critical", "healthrollup": "OK", "state": "Enabled"}, "physical_location": {"partlocation": {"locationordinalvalue": 0, "locationtype": "Slot"}}}, "disk.bay.9:enclosure.internal.0-1": {"description": "PCIe SSD in Slot 9 in Bay 1", "entity": "CPU.1", "capacity_bytes": 1600321314816, "model": "Dell Express Flash NVMe P4610 1.6TB SFF", "protocol": "PCIe", "serial_number": "PHLN035305MN1P6AGN", "status": {"health": "Critical", "healthrollup": "OK", "state": "Enabled"}, "physical_location": {"partlocation": {"locationordinalvalue": 9, "locationtype": "Slot"}}}, "disk.bay.8:enclosure.internal.0-1": {"description": "PCIe SSD in Slot 8 in Bay 1", "entity": "CPU.1", "capacity_bytes": 1600321314816, "model": "Dell Express Flash NVMe P4610 1.6TB SFF", "protocol": "PCIe", "serial_number": "PHLN035305SK1P6AGN", "status": {"health": "OK", "healthrollup": "OK", "state": "Enabled"}, "physical_location": {"partlocation": {"locationordinalvalue": 8, "locationtype": "Slot"}}}, "disk.bay.7:enclosure.internal.0-1": {"description": "PCIe SSD in Slot 7 in Bay 1", "entity": "CPU.1", "capacity_bytes": 1600321314816, "model": "Dell Express Flash NVMe P4610 1.6TB SFF", "protocol": "PCIe", "serial_number": "PHLN035305N51P6AGN", "status": {"health": "OK", "healthrollup": "OK", "state": "Enabled"}, "physical_location": {"partlocation": {"locationordinalvalue": 7, "locationtype": "Slot"}}}}, "processors": {"cpu.socket.2": {"description": "Represents the properties of a Processor attached to this System", "total_cores": 20, "total_threads": 40, "processor_type": "CPU", "model": "Intel(R) Xeon(R) Gold 6230 CPU @ 2.10GHz", "status": {"health": "OK", "state": "Enabled"}, "manufacturer": "Intel"}, "cpu.socket.1": {"description": "Represents the properties of a Processor attached to this System", "total_cores": 20, "total_threads": 40, "processor_type": "CPU", "model": "Intel(R) Xeon(R) Gold 6230 CPU @ 2.10GHz", "status": {"health": "OK", "state": "Enabled"}, "manufacturer": "Intel"}}, "network": {"nic.slot.1-1-1": {"description": "NIC in Slot 1 Port 1 Partition 1", "name": "System Ethernet Interface", "speed_mbps": 0, "status": {"health": "OK", "state": "StandbyOffline"}}, "nic.slot.1-2-1": {"description": "NIC in Slot 1 Port 2 Partition 1", "name": "System Ethernet Interface", "speed_mbps": 0, "status": {"health": "OK", "state": "StandbyOffline"}}, "nic.integrated.1-1-1": {"description": "Integrated NIC 1 Port 1 Partition 1", "name": "System Ethernet Interface", "speed_mbps": 25000, "status": {"health": "OK", "state": "Enabled"}}, "nic.integrated.1-2-1": {"description": "Integrated NIC 1 Port 2 Partition 1", "name": "System Ethernet Interface", "speed_mbps": 25000, "status": {"health": "OK", "state": "Enabled"}}}, "memory": {"dimm.socket.a1": {"description": "DIMM A1", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "Critical", "state": "Enabled"}}, "dimm.socket.a2": {"description": "DIMM A2", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.b5": {"description": "DIMM B5", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.a5": {"description": "DIMM A5", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.b4": {"description": "DIMM B4", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.b1": {"description": "DIMM B1", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.a4": {"description": "DIMM A4", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.b2": {"description": "DIMM B2", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}}}'
        self.fake_data_ok = '{"storage": {"disk.bay.0:enclosure.internal.0-1:raid.integrated.1-1": {"description": "Solid State Disk 0:1:0", "entity": "RAID.Integrated.1-1", "capacity_bytes": 959656755200, "model": "KPM5XVUG960G", "protocol": "SAS", "serial_number": "8080A1CRTP5F", "status": {"health": "OK", "healthrollup": "OK", "state": "Enabled"}, "physical_location": {"partlocation": {"locationordinalvalue": 0, "locationtype": "Slot"}}}, "disk.bay.9:enclosure.internal.0-1": {"description": "PCIe SSD in Slot 9 in Bay 1", "entity": "CPU.1", "capacity_bytes": 1600321314816, "model": "Dell Express Flash NVMe P4610 1.6TB SFF", "protocol": "PCIe", "serial_number": "PHLN035305MN1P6AGN", "status": {"health": "OK", "healthrollup": "OK", "state": "Enabled"}, "physical_location": {"partlocation": {"locationordinalvalue": 9, "locationtype": "Slot"}}}, "disk.bay.8:enclosure.internal.0-1": {"description": "PCIe SSD in Slot 8 in Bay 1", "entity": "CPU.1", "capacity_bytes": 1600321314816, "model": "Dell Express Flash NVMe P4610 1.6TB SFF", "protocol": "PCIe", "serial_number": "PHLN035305SK1P6AGN", "status": {"health": "OK", "healthrollup": "OK", "state": "Enabled"}, "physical_location": {"partlocation": {"locationordinalvalue": 8, "locationtype": "Slot"}}}, "disk.bay.7:enclosure.internal.0-1": {"description": "PCIe SSD in Slot 7 in Bay 1", "entity": "CPU.1", "capacity_bytes": 1600321314816, "model": "Dell Express Flash NVMe P4610 1.6TB SFF", "protocol": "PCIe", "serial_number": "PHLN035305N51P6AGN", "status": {"health": "OK", "healthrollup": "OK", "state": "Enabled"}, "physical_location": {"partlocation": {"locationordinalvalue": 7, "locationtype": "Slot"}}}}, "processors": {"cpu.socket.2": {"description": "Represents the properties of a Processor attached to this System", "total_cores": 20, "total_threads": 40, "processor_type": "CPU", "model": "Intel(R) Xeon(R) Gold 6230 CPU @ 2.10GHz", "status": {"health": "OK", "state": "Enabled"}, "manufacturer": "Intel"}, "cpu.socket.1": {"description": "Represents the properties of a Processor attached to this System", "total_cores": 20, "total_threads": 40, "processor_type": "CPU", "model": "Intel(R) Xeon(R) Gold 6230 CPU @ 2.10GHz", "status": {"health": "OK", "state": "Enabled"}, "manufacturer": "Intel"}}, "network": {"nic.slot.1-1-1": {"description": "NIC in Slot 1 Port 1 Partition 1", "name": "System Ethernet Interface", "speed_mbps": 0, "status": {"health": "OK", "state": "StandbyOffline"}}, "nic.slot.1-2-1": {"description": "NIC in Slot 1 Port 2 Partition 1", "name": "System Ethernet Interface", "speed_mbps": 0, "status": {"health": "OK", "state": "StandbyOffline"}}, "nic.integrated.1-1-1": {"description": "Integrated NIC 1 Port 1 Partition 1", "name": "System Ethernet Interface", "speed_mbps": 25000, "status": {"health": "OK", "state": "Enabled"}}, "nic.integrated.1-2-1": {"description": "Integrated NIC 1 Port 2 Partition 1", "name": "System Ethernet Interface", "speed_mbps": 25000, "status": {"health": "OK", "state": "Enabled"}}}, "memory": {"dimm.socket.a1": {"description": "DIMM A1", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.a2": {"description": "DIMM A2", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.b5": {"description": "DIMM B5", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.a5": {"description": "DIMM A5", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.b4": {"description": "DIMM B4", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.b1": {"description": "DIMM B1", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.a4": {"description": "DIMM A4", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}, "dimm.socket.b2": {"description": "DIMM B2", "memory_device_type": "DDR4", "capacity_mi_b": 31237, "status": {"health": "OK", "state": "Enabled"}}}}'
        TestNodeProxy.mgr.set_health_warning.reset_mock()

    @staticmethod
    def setup_server() -> None:
        node_proxy = NodeProxy(TestNodeProxy.mgr, 8153)
        node_proxy.configure()

    def test_data_collected_has_failures(self) -> None:
        self.getPage(url="/", method="POST", body=self.fake_data_with_criticals, headers=[('Content-Type', 'application/json'), ('Content-Length', str(len(self.fake_data_with_criticals)))])
        self.assertBody('{"storage": [{"member": "disk.bay.0:enclosure.internal.0-1:raid.integrated.1-1", "status": "critical"}, {"member": "disk.bay.9:enclosure.internal.0-1", "status": "critical"}], "memory": [{"member": "dimm.socket.a1", "status": "critical"}]}')
        self.assertStatus('200 OK')
        calls = [
            call('NODE_PROXY_STORAGE',
                 summary='2 storage members are not ok',
                 count=2,
                 detail=[
                         'disk.bay.0:enclosure.internal.0-1:raid.integrated.1-1 is critical',
                         'disk.bay.9:enclosure.internal.0-1 is critical'
                 ]),
            call('NODE_PROXY_MEMORY',
                 summary='1 memory member is not ok',
                 count=1,
                 detail=['dimm.socket.a1 is critical'])
        ]
        assert TestNodeProxy.mgr.set_health_warning.call_args_list == calls

    def test_data_collected_ok(self) -> None:
        self.getPage(url="/", method="POST", body=self.fake_data_ok, headers=[('Content-Type', 'application/json'), ('Content-Length', str(len(self.fake_data_ok)))])
        self.assertBody('{}')
        self.assertStatus('200 OK')
        assert TestNodeProxy.mgr.set_health_warning.call_args_list == []
